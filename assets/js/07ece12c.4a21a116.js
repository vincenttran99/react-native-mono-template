"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9279],{323:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"start-here/rules-and-conventions","title":"Rules and Conventions","description":"To maintain a consistent code style and prevent common issues in the codebase, this starter enforces a set of rules and conventions throughout the project.","source":"@site/docs/start-here/rules-and-conventions.md","sourceDirName":"start-here","slug":"/start-here/rules-and-conventions","permalink":"/react-native-mono-template/docs/start-here/rules-and-conventions","draft":false,"unlisted":false,"editUrl":"https://github.com/vincenttran99/react-native-mono-template/edit/main/docs/docs/start-here/rules-and-conventions.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Customize your App","permalink":"/react-native-mono-template/docs/start-here/customize-your-app"},"next":{"title":"Project Structure","permalink":"/react-native-mono-template/docs/start-here/project-structure"}}');var t=s(4848),o=s(8453);const i={sidebar_position:3},c="Rules and Conventions",l={},d=[{value:"TypeScript",id:"typescript",level:2},{value:"Naming Conventions",id:"naming-conventions",level:2},{value:"Example: Order Feature Module",id:"example-order-feature-module",level:3},{value:"Screens",id:"screens",level:4},{value:"Components",id:"components",level:4},{value:"Global Components",id:"global-components",level:4},{value:"Other Files",id:"other-files",level:4},{value:"Interfaces, Constants, Enums, and Types",id:"interfaces-constants-enums-and-types",level:2}];function a(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rules-and-conventions",children:"Rules and Conventions"})}),"\n",(0,t.jsx)(n.p,{children:"To maintain a consistent code style and prevent common issues in the codebase, this starter enforces a set of rules and conventions throughout the project."}),"\n",(0,t.jsx)(n.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,t.jsxs)(n.p,{children:["This starter uses ",(0,t.jsx)(n.strong,{children:"TypeScript"})," to provide type safety and reduce bugs in the codebase. The project configuration is based on Expo, with adjustments to support absolute imports."]}),"\n",(0,t.jsxs)(n.p,{children:["If you are new to TypeScript, you can read this article: ",(0,t.jsx)(n.a,{href:"https://elazizi.com/posts/how-to-learn-typescript-for-react-developers/",children:"Typescript for React Developers"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["More information can be found in the ",(0,t.jsx)(n.a,{href:"https://docs.expo.io/guides/typescript/",children:"Expo TypeScript Guide"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Static files and resources"})," (assets, docs, etc.) use ",(0,t.jsx)(n.strong,{children:"kebab-case"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Folders"})," use ",(0,t.jsx)(n.strong,{children:"camelCase"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Main files"})," follow the ",(0,t.jsx)(n.strong,{children:"Modular File Naming"})," convention."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-order-feature-module",children:"Example: Order Feature Module"}),"\n",(0,t.jsxs)(n.p,{children:['Suppose you are building a group of screens for the "order" feature. You can organize them in an ',(0,t.jsx)(n.code,{children:"order"})," folder as follows:"]}),"\n",(0,t.jsx)(n.h4,{id:"screens",children:"Screens"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"order.list.screen.tsx"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsxs)(n.em,{children:["Displays the order list screen (Main function: ",(0,t.jsx)(n.code,{children:"OrderListScreen"}),")"]})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"order.detail.screen.tsx"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsxs)(n.em,{children:["Displays the order detail screen (Main function: ",(0,t.jsx)(n.code,{children:"OrderDetailScreen"}),")"]})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"order.create.screen.tsx"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsxs)(n.em,{children:["Displays the order creation screen (Main function: ",(0,t.jsx)(n.code,{children:"OrderCreateScreen"}),")"]})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"components",children:"Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"order.create.form.tsx"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsxs)(n.em,{children:["Form component for creating an order, used within ",(0,t.jsx)(n.code,{children:"order.create.screen.tsx"})," (located in the ",(0,t.jsx)(n.code,{children:"/components"})," subfolder of ",(0,t.jsx)(n.code,{children:"order"}),', without the "screen" suffix)']})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"global-components",children:"Global Components"}),"\n",(0,t.jsxs)(n.p,{children:["Except for base and form components (which use the special prefixes ",(0,t.jsx)(n.code,{children:"B**"})," and ",(0,t.jsx)(n.code,{children:"F**"}),'), all global components must include "component" in both the file and variable names:']}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"base.button.component.tsx"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsxs)(n.em,{children:["Basic button component (Main function: ",(0,t.jsx)(n.code,{children:"BButton"}),")"]})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"form.textInput.component.tsx"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsxs)(n.em,{children:["Form input component (Main function: ",(0,t.jsx)(n.code,{children:"FTextInput"}),")"]})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"global.dialog.component.tsx"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsxs)(n.em,{children:["Global dialog component (Main function: ",(0,t.jsx)(n.code,{children:"GlobalDialogComponent"}),")"]})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"global.toast.component.tsx"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsxs)(n.em,{children:["Global toast component (Main function: ",(0,t.jsx)(n.code,{children:"GlobalToastComponent"}),")"]})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"other-files",children:"Other Files"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"date.constant.ts"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Contains constants for date handling"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"date.helper.ts"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Contains helper functions for date handling"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"user.model.ts"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Defines models for user-related entities"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"auth.store.ts"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Contains stores for state and actions related to authentication"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"auth.api.ts"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Contains APIs related to authentication"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"auth.login.queries.ts"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Contains hooks and React Query logic for the login feature in the authentication module"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"interfaces-constants-enums-and-types",children:"Interfaces, Constants, Enums, and Types"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Interfaces, Enums, and Types"})," use ",(0,t.jsx)(n.strong,{children:"PascalCase"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Static constants"})," use ",(0,t.jsx)(n.strong,{children:"UPPER_CASE"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Interface: ",(0,t.jsx)(n.code,{children:"IOrder"}),", ",(0,t.jsx)(n.code,{children:"IUser"}),", ",(0,t.jsx)(n.code,{children:"IProduct"})]}),"\n",(0,t.jsxs)(n.li,{children:["Enum: ",(0,t.jsx)(n.code,{children:"EOrderStatus"}),", ",(0,t.jsx)(n.code,{children:"EUserRole"})]}),"\n",(0,t.jsx)(n.li,{children:"Type: Type used for quick definition, usually comes with corresponding suffix: BButtonProps, LoginResponse, etc"}),"\n",(0,t.jsxs)(n.li,{children:["Constant: ",(0,t.jsx)(n.code,{children:"ORDER_STATUS"}),", ",(0,t.jsx)(n.code,{children:"USER_ROLE"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);