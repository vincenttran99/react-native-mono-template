"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6467],{8070:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ui-components/ui-and-theming","title":"UI and Theming","description":"This template uses Shopify Restyle as the primary theming solution, providing a powerful and type-safe way to build consistent UI components with a design system approach.","source":"@site/docs/ui-components/ui-and-theming.md","sourceDirName":"ui-components","slug":"/ui-components/ui-and-theming","permalink":"/react-native-mono-template/docs/ui-components/ui-and-theming","draft":false,"unlisted":false,"editUrl":"https://github.com/vincenttran99/react-native-mono-template/edit/main/docs/docs/ui-components/ui-and-theming.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","previous":{"title":"Environment Variables and Configuration","permalink":"/react-native-mono-template/docs/start-here/environment-variables"},"next":{"title":"Fonts","permalink":"/react-native-mono-template/docs/ui-components/fonts"}}');var i=s(4848),r=s(8453);const o={sidebar_position:1},a="UI and Theming",l={},c=[{value:"Why Shopify Restyle?",id:"why-shopify-restyle",level:2},{value:"About Shopify Restyle",id:"about-shopify-restyle",level:2},{value:"Theme Structure",id:"theme-structure",level:2},{value:"Colors",id:"colors",level:3},{value:"Spacing System",id:"spacing-system",level:3},{value:"Typography",id:"typography",level:3},{value:"Shadow Variants",id:"shadow-variants",level:3},{value:"Theme Provider Setup",id:"theme-provider-setup",level:2},{value:"Dark Mode Support",id:"dark-mode-support",level:2},{value:"Responsive Design",id:"responsive-design",level:2},{value:"Device Scaling Functions",id:"device-scaling-functions",level:3},{value:"Breakpoint-Based Responsive Values",id:"breakpoint-based-responsive-values",level:3},{value:"Setting Up Breakpoints",id:"setting-up-breakpoints",level:4},{value:"Using Responsive Props",id:"using-responsive-props",level:4},{value:"Advanced Responsive Usage",id:"advanced-responsive-usage",level:4},{value:"Best Practices for Responsive Design",id:"best-practices-for-responsive-design",level:3},{value:"Custom Hook for Theme Access",id:"custom-hook-for-theme-access",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Extending the Theme",id:"extending-the-theme",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"ui-and-theming",children:"UI and Theming"})}),"\n",(0,i.jsxs)(n.p,{children:["This template uses ",(0,i.jsx)(n.strong,{children:"Shopify Restyle"})," as the primary theming solution, providing a powerful and type-safe way to build consistent UI components with a design system approach."]}),"\n",(0,i.jsx)(n.h2,{id:"why-shopify-restyle",children:"Why Shopify Restyle?"}),"\n",(0,i.jsx)(n.p,{children:"For this React Native template, we chose Shopify Restyle because it offers:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Safety"}),": Full TypeScript support with compile-time checking for theme values"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Optimized styling with minimal runtime overhead"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency"}),": Enforces design system constraints across all components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Developer Experience"}),": Intuitive API that feels natural for React Native developers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flexibility"}),": Easy to customize and extend while maintaining consistency"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"about-shopify-restyle",children:"About Shopify Restyle"}),"\n",(0,i.jsx)(n.p,{children:"Shopify Restyle is a type-enforced system for building UI components in React Native with React Native Web support. It provides a set of utility functions to create components that automatically consume values from a centralized theme."}),"\n",(0,i.jsx)(n.p,{children:"Key features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Theme-based design system"}),"\n",(0,i.jsx)(n.li,{children:"Responsive design support"}),"\n",(0,i.jsx)(n.li,{children:"Dark mode capabilities"}),"\n",(0,i.jsx)(n.li,{children:"Variant-based component styling"}),"\n",(0,i.jsx)(n.li,{children:"Automatic TypeScript inference"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For more details about Shopify Restyle, check their ",(0,i.jsx)(n.a,{href:"https://github.com/Shopify/restyle",children:"official documentation"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"theme-structure",children:"Theme Structure"}),"\n",(0,i.jsx)(n.p,{children:"The theme system is built around several core concepts:"}),"\n",(0,i.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,i.jsx)(n.p,{children:"The template includes comprehensive color palettes for both light and dark themes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript:src/constants/theme.constant.ts",children:'export const COLORS = {\n  light: {\n    background: "#f5f5f5",\n    primaryLightest: "#eff4fd",\n    primaryLight: "#c7d9f9",\n    primary: "#8cb0f3",\n    primaryDark: "#578cee",\n    primaryDarkest: "#1d61e0",\n    reverse: "#05122a",\n  },\n  dark: {\n    background: "#1b1b1b",\n    primaryDarkest: "#031b3c",\n    primaryDark: "#08459a",\n    primary: "#4290ff",\n    primaryLight: "#a0c8ff",\n    primaryLightest: "#dfedff",\n    reverse: "#ffffff",\n  },\n};\n'})}),"\n",(0,i.jsx)(n.h3,{id:"spacing-system",children:"Spacing System"}),"\n",(0,i.jsx)(n.p,{children:"Consistent spacing values using a scale-based approach:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript:src/constants/sizes.constant.ts",children:"export const Space = {\n  none: 0,\n  xxxxs: MHS._2,\n  xxxs: MHS._4,\n  xxs: MHS._6,\n  xs: MHS._8,\n  sm: MHS._10,\n  md: MHS._12,\n  lg: MHS._16,\n  xl: MHS._20,\n  xxl: MHS._26,\n  xxxl: MHS._34,\n  xxxxl: MHS._48,\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"typography",children:"Typography"}),"\n",(0,i.jsx)(n.p,{children:"Predefined text variants with responsive sizing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript:src/constants/theme.constant.ts",children:"textVariants: {\n  sm: {\n    fontSize: FontSize.sm,\n    letterSpacing: mhs(0.25, 0.3),\n    lineHeight: mvs(20, 0.1),\n  },\n  md: {\n    fontSize: FontSize.md,\n    letterSpacing: mhs(0.15, 0.3),\n    lineHeight: mvs(24, 0.1),\n  },\n  lg: {\n    fontSize: FontSize.lg,\n    letterSpacing: mhs(0.15, 0.3),\n    lineHeight: mvs(25, 0.1),\n  },\n  // ... more variants\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"shadow-variants",children:"Shadow Variants"}),"\n",(0,i.jsx)(n.p,{children:"Consistent elevation system:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript:src/constants/theme.constant.ts",children:'shadowVariants: {\n  xs: {\n    shadowColor: "shadowLight",\n    shadowOffset: { width: 0, height: mhs(1) },\n    shadowOpacity: 0.2,\n    shadowRadius: mhs(0.7),\n    elevation: 1,\n  },\n  md: {\n    shadowColor: "shadow",\n    shadowOffset: { width: 0, height: mhs(2) },\n    shadowOpacity: 0.3,\n    shadowRadius: mhs(2.22),\n    elevation: 3,\n  },\n  // ... more variants\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"theme-provider-setup",children:"Theme Provider Setup"}),"\n",(0,i.jsx)(n.p,{children:"The theme is provided at the app level using Shopify Restyle's ThemeProvider:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript:src/navigation/index.tsx",children:'import { ThemeProvider } from "@shopify/restyle";\nimport { DARK_THEME, LIGHT_THEME } from "@/constants/theme.constant";\n\nexport default function AppNavigation() {\n  const theme = useSystemStore((state) => state.theme);\n\n  const themeValue = useMemo(\n    () => (theme === "light" ? LIGHT_THEME : DARK_THEME),\n    [theme]\n  );\n\n  return (\n    <ThemeProvider theme={themeValue}>\n      {/* App content */}\n    </ThemeProvider>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"dark-mode-support",children:"Dark Mode Support"}),"\n",(0,i.jsx)(n.p,{children:"The template includes built-in dark mode support with automatic theme switching:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic Detection"}),": Respects system theme preferences"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Manual Override"}),": Users can manually switch themes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Persistent Storage"}),": Theme preference is saved across app sessions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Status Bar Integration"}),": Automatically adjusts status bar style"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"responsive-design",children:"Responsive Design"}),"\n",(0,i.jsx)(n.p,{children:"The template uses responsive scaling functions for consistent sizing across devices and also supports Shopify Restyle's built-in responsive values system."}),"\n",(0,i.jsx)(n.h3,{id:"device-scaling-functions",children:"Device Scaling Functions"}),"\n",(0,i.jsx)(n.p,{children:"The template includes custom scaling functions for consistent sizing across different screen sizes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript:src/helpers/theme.helper.ts",children:"// Horizontal scaling\nexport function horizontalScale(size: number) {\n  return (size * shortDimension) / guidelineBaseWidth;\n}\n\n// Vertical scaling\nexport function verticalScale(size: number) {\n  return (size * longDimension) / guidelineBaseHeight;\n}\n\n// Moderate scaling with factor\nexport function moderateHorizontalScale(size: number, factor = 0.5) {\n  return size + (horizontalScale(size) - size) * factor;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"breakpoint-based-responsive-values",children:"Breakpoint-Based Responsive Values"}),"\n",(0,i.jsxs)(n.p,{children:["Shopify Restyle supports responsive values through breakpoints defined in your theme. ",(0,i.jsx)("mcreference",{link:"https://shopify.github.io/restyle/fundamentals/responsive-values",index:"0",children:"0"})," Any prop powered by Restyle can accept different values for each screen size:"]}),"\n",(0,i.jsx)(n.h4,{id:"setting-up-breakpoints",children:"Setting Up Breakpoints"}),"\n",(0,i.jsx)(n.p,{children:"First, define breakpoints in your theme configuration:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript:src/constants/theme.constant.ts",children:"export const LIGHT_THEME = createTheme({\n  // ... other theme properties\n  breakpoints: {\n    phone: 0,\n    tablet: 768,\n    desktop: 1024,\n  },\n  // ...\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"using-responsive-props",children:"Using Responsive Props"}),"\n",(0,i.jsx)(n.p,{children:"Once breakpoints are defined, you can use responsive values in any Restyle-powered component:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"// Single value (applies to all screen sizes)\n<BView flexDirection=\"row\" />\n\n// Responsive values (different values per breakpoint)\n<BView flexDirection={{phone: 'column', tablet: 'row'}} />\n\n// Responsive spacing\n<BText\n  fontSize={{phone: 'sm', tablet: 'md', desktop: 'lg'}}\n  padding={{phone: 'sm', tablet: 'md'}}\n>\n  Responsive text\n</BText>\n\n// Responsive layout\n<BView\n  width={{phone: '100%', tablet: '50%', desktop: '33%'}}\n  marginBottom={{phone: 'md', tablet: 'lg'}}\n>\n  Responsive container\n</BView>\n"})}),"\n",(0,i.jsx)(n.h4,{id:"advanced-responsive-usage",children:"Advanced Responsive Usage"}),"\n",(0,i.jsxs)(n.p,{children:["For complex responsive logic, you can extract responsive prop values using the ",(0,i.jsx)(n.code,{children:"useResponsiveProp"})," hook: ",(0,i.jsx)("mcreference",{link:"https://shopify.github.io/restyle/fundamentals/responsive-values",index:"0",children:"0"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { useResponsiveProp, useTheme } from "@shopify/restyle";\nimport { Theme } from "@/constants/theme.constant";\n\nconst ResponsiveButton = ({\n  color = { phone: "primary", tablet: "secondary" },\n  ...props\n}) => {\n  const theme = useTheme<Theme>();\n\n  // Extract the current responsive value\n  const currentColor = useResponsiveProp(color);\n\n  // Use the extracted value for conditional logic\n  const backgroundColor =\n    currentColor === "primary" ? "primaryLight" : "secondaryLight";\n\n  return (\n    <BPressable\n      backgroundColor={backgroundColor}\n      padding={{ phone: "sm", tablet: "md" }}\n      borderRadius={{ phone: "sm", tablet: "md" }}\n      {...props}\n    >\n      <BText color={color}>Responsive Button</BText>\n    </BPressable>\n  );\n};\n'})}),"\n",(0,i.jsx)(n.h3,{id:"best-practices-for-responsive-design",children:"Best Practices for Responsive Design"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mobile First"}),": Start with mobile design and scale up"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistent Breakpoints"}),": Use the same breakpoint names across your app"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Responsive values are optimized and don't cause unnecessary re-renders"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Testing"}),": Test your responsive layouts on different screen sizes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fallbacks"}),": Always provide fallback values for smaller screens"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This responsive system provides powerful tools for creating adaptive layouts that work seamlessly across different device sizes while maintaining design consistency and performance."}),"\n",(0,i.jsx)(n.h2,{id:"custom-hook-for-theme-access",children:"Custom Hook for Theme Access"}),"\n",(0,i.jsx)(n.p,{children:"The template provides a custom hook for accessing theme values in components:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript:src/helpers/hooks/system.hook.ts",children:"export function useSystemTheme<T extends NamedStyles<T>>(\n  createStyle?: (theme: BaseTheme) => T\n): {\n  styles: T;\n  theme: BaseTheme;\n} {\n  const theme = useTheme();\n  const styles = useMemo(() => {\n    return createStyle?.(theme) || ({} as T);\n  }, [theme]);\n\n  return { theme, styles };\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Usage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"const { styles, theme } = useSystemTheme((theme) => ({\n  container: {\n    backgroundColor: theme.colors.background,\n    padding: theme.spacing.md,\n  },\n}));\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Theme Values"}),": Always use theme values instead of hardcoded colors or sizes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistent Naming"}),": Follow the established naming conventions for variants and colors"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Responsive Scaling"}),": Use the provided scaling functions for consistent sizing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component Composition"}),": Build complex components by composing base components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Safety"}),": Leverage TypeScript for compile-time theme validation"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"extending-the-theme",children:"Extending the Theme"}),"\n",(0,i.jsx)(n.p,{children:"To add new colors, spacing, or variants:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add to Constants"}),": Update the relevant constant files"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Update Theme"}),": Modify the theme configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type Safety"}),": Ensure TypeScript types are updated"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": Update component documentation"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example of adding a new color:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// In theme.constant.ts\nexport const COLORS = {\n  light: {\n    // ... existing colors\n    accent: "#ff6b6b",\n  },\n  dark: {\n    // ... existing colors\n    accent: "#ff8e8e",\n  },\n};\n'})}),"\n",(0,i.jsx)(n.p,{children:"This theming system provides a solid foundation for building consistent, maintainable, and scalable React Native applications with excellent developer experience and type safety."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);