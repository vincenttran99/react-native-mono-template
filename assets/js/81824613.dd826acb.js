"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7562],{4556:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ui-components/base-components","title":"Base Components","description":"This template comes with a comprehensive set of base components built on top of @shopify/restyle to help you get started and save development time. All components are designed to be theme-aware, responsive, and highly customizable.","source":"@site/docs/ui-components/base-components.md","sourceDirName":"ui-components","slug":"/ui-components/base-components","permalink":"/react-native-mono-template/docs/ui-components/base-components","draft":false,"unlisted":false,"editUrl":"https://github.com/vincenttran99/react-native-mono-template/edit/main/docs/docs/ui-components/base-components.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Fonts","permalink":"/react-native-mono-template/docs/ui-components/fonts"},"next":{"title":"Global Components","permalink":"/react-native-mono-template/docs/ui-components/global-components"}}');var o=s(4848),r=s(8453);const l={sidebar_position:3},t="Base Components",c={},d=[{value:"Available Components",id:"available-components",level:2},{value:"Core Components",id:"core-components",level:3},{value:"BView",id:"bview",level:4},{value:"BText",id:"btext",level:4},{value:"BSafeAreaView",id:"bsafeareaview",level:4},{value:"BKeyboardAvoidingView",id:"bkeyboardavoidingview",level:4},{value:"Interactive Components",id:"interactive-components",level:3},{value:"BButton",id:"bbutton",level:4},{value:"BPressable",id:"bpressable",level:4},{value:"BIconButton",id:"biconbutton",level:4},{value:"BChip",id:"bchip",level:4},{value:"Form Components",id:"form-components",level:3},{value:"BTextInput",id:"btextinput",level:4},{value:"BCheckBox",id:"bcheckbox",level:4},{value:"BRadio",id:"bradio",level:4},{value:"Display Components",id:"display-components",level:3},{value:"BIcon",id:"bicon",level:4},{value:"BSVGIcon",id:"bsvgicon",level:4},{value:"BImage",id:"bimage",level:4},{value:"BDivider",id:"bdivider",level:4},{value:"Layout Components",id:"layout-components",level:3},{value:"BSurface",id:"bsurface",level:4},{value:"BScrollview",id:"bscrollview",level:4},{value:"BFlashList",id:"bflashlist",level:4},{value:"Text Components",id:"text-components",level:3},{value:"BTextEllipsis",id:"btextellipsis",level:4},{value:"BTextMulti",id:"btextmulti",level:4},{value:"Utility Components",id:"utility-components",level:3},{value:"BLazy",id:"blazy",level:4},{value:"Usage Patterns",id:"usage-patterns",level:2},{value:"Theme Integration",id:"theme-integration",level:3},{value:"Responsive Design",id:"responsive-design",level:3},{value:"Composition",id:"composition",level:3},{value:"List Performance",id:"list-performance",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"base-components",children:"Base Components"})}),"\n",(0,o.jsxs)(n.p,{children:["This template comes with a comprehensive set of base components built on top of ",(0,o.jsx)(n.code,{children:"@shopify/restyle"})," to help you get started and save development time. All components are designed to be theme-aware, responsive, and highly customizable."]}),"\n",(0,o.jsxs)(n.p,{children:["All base components can be found in the ",(0,o.jsx)("mcfolder",{name:"base",path:"/Users/vincent_tran/Work/ReactNative/react-native-mono-template/src/components/base"})," folder. Our philosophy is to keep components simple, reusable, and consistent with the design system while leveraging the power of Shopify Restyle for theming."]}),"\n",(0,o.jsx)(n.p,{children:"Based on your needs, you can either use them as they are or customize them to fit your specific requirements. You can also create new components following the same approach."}),"\n",(0,o.jsx)(n.h2,{id:"available-components",children:"Available Components"}),"\n",(0,o.jsx)(n.h3,{id:"core-components",children:"Core Components"}),"\n",(0,o.jsx)(n.h4,{id:"bview",children:"BView"}),"\n",(0,o.jsxs)(n.p,{children:["The foundational view component created using ",(0,o.jsx)(n.code,{children:"createBox"})," from ",(0,o.jsx)(n.code,{children:"@shopify/restyle"}),". It supports all Restyle box props for layout, spacing, colors, and borders."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BView from "@/components/base/base.view";\n\n<BView backgroundColor="primary" padding="md" borderRadius="lg" margin="sm">\n  {/* Your content */}\n</BView>;\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Props:"})," All ",(0,o.jsx)(n.code,{children:"BoxProps<Theme>"})," and ",(0,o.jsx)(n.code,{children:"ViewProps"})," from React Native"]}),"\n",(0,o.jsx)(n.h4,{id:"btext",children:"BText"}),"\n",(0,o.jsxs)(n.p,{children:["A theme-aware text component that leverages ",(0,o.jsx)(n.code,{children:"textVariants"})," from your theme for consistent typography across the app."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BText from "@/components/base/base.text";\n\n<BText variant="heading" color="primary" textAlign="center">\n  Hello World\n</BText>;\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Props:"})," All ",(0,o.jsx)(n.code,{children:"TextProps<Theme>"})," from Restyle and ",(0,o.jsx)(n.code,{children:"TextProps"})," from React Native"]}),"\n",(0,o.jsx)(n.h4,{id:"bsafeareaview",children:"BSafeAreaView"}),"\n",(0,o.jsx)(n.p,{children:"A theme-aware safe area view component that ensures content is displayed within the safe area boundaries of the device."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BSafeAreaView from "@/components/base/base.safeAreaView";\n\n<BSafeAreaView\n  backgroundColor="background"\n  padding="md"\n  edges={["top", "bottom"]}\n>\n  {/* Your content */}\n</BSafeAreaView>;\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Props:"})," All ",(0,o.jsx)(n.code,{children:"BoxProps<Theme>"})," and ",(0,o.jsx)(n.code,{children:"SafeAreaViewProps"})," from react-native-safe-area-context"]}),"\n",(0,o.jsx)(n.h4,{id:"bkeyboardavoidingview",children:"BKeyboardAvoidingView"}),"\n",(0,o.jsx)(n.p,{children:"A keyboard-aware view component that automatically adjusts its position when the keyboard appears."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BKeyboardAvoidingView from "@/components/base/base.keyboardAvoidingView";\n\n<BKeyboardAvoidingView\n  backgroundColor="background"\n  padding="md"\n  behavior="padding"\n>\n  {/* Your content with text inputs */}\n</BKeyboardAvoidingView>;\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Props:"})," All ",(0,o.jsx)(n.code,{children:"BoxProps<Theme>"})," and ",(0,o.jsx)(n.code,{children:"KeyboardAvoidingViewProps"})," from react-native-keyboard-controller"]}),"\n",(0,o.jsx)(n.h3,{id:"interactive-components",children:"Interactive Components"}),"\n",(0,o.jsx)(n.h4,{id:"bbutton",children:"BButton"}),"\n",(0,o.jsx)(n.p,{children:"A highly customizable button component with support for icons, different sizes, outline styles, and rounded corners."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BButton from \'@/components/base/base.button\';\n\n<BButton\n  size="md"\n  label="Click me"\n  leftIcon="heart"\n  backgroundColor="primary"\n  onPress={() => console.log(\'Pressed!\')}\n/>\n\n// Outline button\n<BButton\n  size="lg"\n  label="Outline Button"\n  outline\n  round\n  rightIcon="arrow-right"\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"size"}),": Button size from theme spacing (",(0,o.jsx)(n.code,{children:'"xs"'})," to ",(0,o.jsx)(n.code,{children:'"xxxxl"'}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"label"}),": Button text"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"leftIcon"}),"/",(0,o.jsx)(n.code,{children:"rightIcon"}),": Icon names (MaterialCommunityIcons)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"outline"}),": Boolean for outline style"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"round"}),": Boolean for fully rounded button"]}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"BPressableProps"})]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bpressable",children:"BPressable"}),"\n",(0,o.jsx)(n.p,{children:"An enhanced pressable component with built-in opacity animation and full Restyle support."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BPressable from "@/components/base/base.pressable";\n\n<BPressable\n  backgroundColor="secondary"\n  padding="md"\n  borderRadius="md"\n  onPress={handlePress}\n  disableOpacityEffect={false}\n>\n  <BText>Pressable Content</BText>\n</BPressable>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"disableOpacityEffect"}),": Disable the press animation"]}),"\n",(0,o.jsx)(n.li,{children:"All Restyle props (spacing, colors, layout, etc.)"}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"PressableProps"})," from React Native"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"biconbutton",children:"BIconButton"}),"\n",(0,o.jsx)(n.p,{children:"A simple icon button component perfect for toolbars and action buttons."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BIconButton from "@/components/base/base.iconButton";\n\n<BIconButton\n  icon="menu"\n  size="md"\n  iconColor="primary"\n  backgroundColor="ground"\n  onPress={openMenu}\n/>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"icon"}),": Icon name (string) or custom React node"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"size"}),": Size from theme spacing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"iconColor"}),": Color from theme"]}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"BPressableProps"})]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bchip",children:"BChip"}),"\n",(0,o.jsx)(n.p,{children:"A compact chip component perfect for tags, filters, and selections with icon support."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BChip from \'@/components/base/base.chip\';\n\n<BChip\n  label="React Native"\n  isSelected={isSelected}\n  onPress={() => setIsSelected(!isSelected)}\n  icon="react"\n/>\n\n// Without icon\n<BChip\n  label="JavaScript"\n  isSelected={false}\n  onPress={handlePress}\n/>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"label"}),": Chip text content"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"isSelected"}),": Boolean for selected state styling"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"icon"}),": Icon name from MaterialCommunityIcons"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"iconProps"}),": Additional props for the icon"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"labelProps"}),": Additional props for the text"]}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"BPressableProps"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"form-components",children:"Form Components"}),"\n",(0,o.jsx)(n.h4,{id:"btextinput",children:"BTextInput"}),"\n",(0,o.jsx)(n.p,{children:"A comprehensive text input component with icon support, error states, and full theming integration."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BTextInput from "@/components/base/base.textInput";\n\n<BTextInput\n  placeholder="Enter your email"\n  leftIcon="email"\n  rightIcon="eye"\n  onRightIconPress={togglePasswordVisibility}\n  error={hasError}\n  containerBackgroundColor="ground"\n  containerBorderRadius="md"\n/>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"leftIcon"}),"/",(0,o.jsx)(n.code,{children:"rightIcon"}),": Icon support with press handlers"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"error"}),": Boolean for error state styling"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"container*"}),": Props for styling the input container"]}),"\n",(0,o.jsx)(n.li,{children:"All Restyle text and layout props"}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"TextInputProps"})," from React Native"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bcheckbox",children:"BCheckBox"}),"\n",(0,o.jsx)(n.p,{children:"An animated checkbox component with customizable colors and sizes."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BCheckBox from "@/components/base/base.checkbox";\n\n<BCheckBox\n  isChecked={isChecked}\n  onPress={() => setIsChecked(!isChecked)}\n  size="md"\n  activeColor="primary"\n  outline={false}\n/>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"isChecked"}),": Boolean state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"size"}),": Size from theme spacing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"activeColor"}),"/",(0,o.jsx)(n.code,{children:"inactiveColor"}),": Theme colors"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"outline"}),": Boolean for outline style"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"disabled"}),": Boolean for disabled state"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bradio",children:"BRadio"}),"\n",(0,o.jsx)(n.p,{children:"An animated radio button component with smooth transitions."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BRadio from "@/components/base/base.radio";\n\n<BRadio\n  isSelected={selectedValue === "option1"}\n  onPress={() => setSelectedValue("option1")}\n  size="md"\n  activeColor="primary"\n/>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"isSelected"}),": Boolean state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"size"}),": Size from theme spacing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"activeColor"}),"/",(0,o.jsx)(n.code,{children:"inactiveColor"}),": Theme colors"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"disabled"}),": Boolean for disabled state"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"display-components",children:"Display Components"}),"\n",(0,o.jsx)(n.h4,{id:"bicon",children:"BIcon"}),"\n",(0,o.jsx)(n.p,{children:"A theme-aware icon component using MaterialCommunityIcons with color support from your theme."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BIcon from "@/components/base/base.icon";\n\n<BIcon name="heart" size={24} color="primary" />;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"name"}),": Icon name from MaterialCommunityIcons"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"size"}),": Icon size in pixels"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"color"}),": Color from theme"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bsvgicon",children:"BSVGIcon"}),"\n",(0,o.jsx)(n.p,{children:"A component for rendering SVG icons with theme color support and automatic color replacement."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BSVGIcon from "@/components/base/base.svgIcon";\n\n<BSVGIcon\n  xml={svgString}\n  size={24}\n  color="primary"\n  ignoreOverrideColor={false}\n/>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"xml"}),": SVG string content"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"size"}),": Icon size"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"color"}),": Theme color or custom color string"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ignoreOverrideColor"}),": Skip automatic color replacement"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bimage",children:"BImage"}),"\n",(0,o.jsxs)(n.p,{children:["An optimized image component using ",(0,o.jsx)(n.code,{children:"expo-image"})," with blur hash support and automatic sizing."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BImage from "@/components/base/base.image";\n\n<BImage\n  source={{ uri: "https://example.com/image.jpg" }}\n  width={200}\n  height={200}\n  round\n  hasBlur\n/>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"width"}),"/",(0,o.jsx)(n.code,{children:"height"}),": Image dimensions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"round"}),": Boolean for circular image"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"hasBlur"}),": Boolean for blur hash placeholder"]}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"ImageProps"})," from expo-image"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bdivider",children:"BDivider"}),"\n",(0,o.jsx)(n.p,{children:"A flexible divider component supporting different styles and orientations."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BDivider from \'@/components/base/base.divider\';\n\n<BDivider type="solid" bold />\n<BDivider type="dashed" vertical />\n<BDivider type="dotted" backgroundColor="secondary" />\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"type"}),": ",(0,o.jsx)(n.code,{children:'"solid"'})," | ",(0,o.jsx)(n.code,{children:'"dotted"'})," | ",(0,o.jsx)(n.code,{children:'"dashed"'})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"vertical"}),": Boolean for vertical orientation"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"bold"}),": Boolean for thicker line"]}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"BViewProps"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"layout-components",children:"Layout Components"}),"\n",(0,o.jsx)(n.h4,{id:"bsurface",children:"BSurface"}),"\n",(0,o.jsx)(n.p,{children:"A pressable surface component with shadow variant support from your theme."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BSurface from "@/components/base/base.surface";\n\n<BSurface\n  variant="card"\n  backgroundColor="background"\n  padding="md"\n  borderRadius="lg"\n  onPress={handlePress}\n>\n  <BText>Surface Content</BText>\n</BSurface>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"variant"}),": Shadow variant from theme"]}),"\n",(0,o.jsxs)(n.li,{children:["All Restyle props and ",(0,o.jsx)(n.code,{children:"PressableProps"})]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bscrollview",children:"BScrollview"}),"\n",(0,o.jsx)(n.p,{children:"An optimized scrollable container using FlashList with keyboard awareness."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BScrollview from "@/components/base/base.scrollview";\n\n<BScrollview estimatedItemSize={100} padding="md" backgroundColor="background">\n  {children}\n</BScrollview>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"estimatedItemSize"}),": Required for FlashList optimization"]}),"\n",(0,o.jsx)(n.li,{children:"All FlashList props and Restyle spacing/background props"}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"bflashlist",children:"BFlashList"}),"\n",(0,o.jsx)(n.p,{children:"A high-performance list component with built-in loading, error, and empty states."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BFlashList from "@/components/base/base.flashList";\n\nconst data = [\n  { id: "1", name: "Item 1", type: "item" },\n  { id: "2", name: "Item 2", type: "item" },\n];\n\n<BFlashList\n  data={data}\n  keyAttribute="id"\n  keyTypeAttribute="type"\n  renderItem={({ item }) => (\n    <BView padding="md">\n      <BText>{item.name}</BText>\n    </BView>\n  )}\n  estimatedItemSize={60}\n  LoadingComponent={CustomLoadingComponent}\n  ErrorComponent={CustomErrorComponent}\n  padding="md"\n/>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"keyAttribute"}),": Key field for item identification (required)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"keyTypeAttribute"}),': Type field for item type identification (default: "type")']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"LoadingComponent"}),": Custom loading component"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ErrorComponent"}),": Custom error component"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"LoadMoreErrorComponent"}),": Custom load more error component"]}),"\n",(0,o.jsx)(n.li,{children:"All FlashList props and Restyle spacing/background props"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"text-components",children:"Text Components"}),"\n",(0,o.jsx)(n.h4,{id:"btextellipsis",children:"BTextEllipsis"}),"\n",(0,o.jsx)(n.p,{children:'An intelligent text component with "see more"/"see less" functionality for long content.'}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BTextEllipsis from "@/components/base/textEllipsis/base.textEllipsis";\n\n<BTextEllipsis\n  numberOfLines={3}\n  readMoreText="Read more"\n  readLessText="Show less"\n>\n  {longTextContent}\n</BTextEllipsis>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"numberOfLines"}),": Maximum lines before truncation"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"readMoreText"}),"/",(0,o.jsx)(n.code,{children:"readLessText"}),": Custom button text"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"compensationSpaceAndroid"}),"/",(0,o.jsx)(n.code,{children:"compensationSpaceIos"}),": Platform-specific spacing"]}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"BTextProps"})]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"btextmulti",children:"BTextMulti"}),"\n",(0,o.jsxs)(n.p,{children:["A component for rendering text with multiple styles using the ",(0,o.jsx)(n.code,{children:"|||"})," separator."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BTextMulti from "@/components/base/base.multiText";\n\n<BTextMulti\n  style1={{ color: "red" }}\n  style2={{ fontWeight: "bold" }}\n  style3={{ fontStyle: "italic" }}\n>\n  Normal text|||Bold red text|||Italic text\n</BTextMulti>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"style1"}),", ",(0,o.jsx)(n.code,{children:"style2"}),", ..., ",(0,o.jsx)(n.code,{children:"style21"}),": Styles for each text segment"]}),"\n",(0,o.jsxs)(n.li,{children:["All ",(0,o.jsx)(n.code,{children:"BTextProps"})," (excluding children and style)"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"utility-components",children:"Utility Components"}),"\n",(0,o.jsx)(n.h4,{id:"blazy",children:"BLazy"}),"\n",(0,o.jsx)(n.p,{children:"A component for lazy rendering with optional loading indicator."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import BLazy from "@/components/base/base.lazy";\n\n<BLazy timeRender={1000} haveIndicator>\n  <ExpensiveComponent />\n</BLazy>;\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Props:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"timeRender"}),": Delay in milliseconds before rendering"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"haveIndicator"}),": Show ActivityIndicator while waiting"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"children"}),": Content to render after delay"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"usage-patterns",children:"Usage Patterns"}),"\n",(0,o.jsx)(n.h3,{id:"theme-integration",children:"Theme Integration"}),"\n",(0,o.jsx)(n.p,{children:"All components automatically integrate with your theme system:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'// Colors from theme\n<BView backgroundColor="primary" />\n<BText color="secondary" />\n\n// Spacing from theme\n<BView padding="md" margin="lg" />\n\n// Border radius from theme\n<BView borderRadius="xl" />\n\n// Text variants from theme\n<BText variant="heading" />\n'})}),"\n",(0,o.jsx)(n.h3,{id:"responsive-design",children:"Responsive Design"}),"\n",(0,o.jsx)(n.p,{children:"Components support responsive values using breakpoints:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'<BView\n  padding={{ phone: "sm", tablet: "lg" }}\n  flexDirection={{ phone: "column", tablet: "row" }}\n/>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"composition",children:"Composition"}),"\n",(0,o.jsx)(n.p,{children:"Components are designed to work together seamlessly:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'<BSurface variant="card" padding="md">\n  <BView flexDirection="row" alignItems="center" gap="sm">\n    <BIcon name="user" color="primary" />\n    <BView flex={1}>\n      <BText variant="heading">User Name</BText>\n      <BText variant="body" color="secondary">\n        user@example.com\n      </BText>\n    </BView>\n    <BIconButton icon="more-vert" onPress={showMenu} />\n  </BView>\n</BSurface>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"list-performance",children:"List Performance"}),"\n",(0,o.jsx)(n.p,{children:"For optimal list performance, use BFlashList with proper configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'<BFlashList\n  data={items}\n  keyAttribute="id"\n  estimatedItemSize={80}\n  renderItem={({ item }) => <ItemComponent item={item} />}\n  onEndReached={loadMore}\n  refreshing={isRefreshing}\n  onRefresh={handleRefresh}\n/>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var i=s(6540);const o={},r=i.createContext(o);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);